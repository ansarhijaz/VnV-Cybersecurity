/**
 * FormReceiver.gs
 * Robust version: handles POST, appends to Submissions sheet,
 * sends emails, updates status columns, and defends against incorrect direct calls.
 */

/* -------------------------
   CONFIGURATION HELPERS
   ------------------------- */
function setScriptProperties() {
  var props = PropertiesService.getScriptProperties();
  props.setProperties({
    SPREADSHEET_ID: '1r6hmxKu0mV-3cM2AUbECt4SWCv_LVpd_qwivIsbXFSg',
    SHEET_NAME: 'Submissions',
    ALLOWED_ORIGINS: '*', // testing: allow all. For production replace with 'https://yourdomain.com'
    OWNER_EMAIL: 'ansar@vnv.ca',
    USER_SUBJECT: 'Thank you for completing the Cybersecurity Self-Assessment - Next Steps Inside',
    OWNER_SUBJECT: 'New Cybersecurity Self-Assessment Lead'
  });
  Logger.log('Script properties set. Update values and run once.');
}

/* -------------------------
   MAIN HANDLER
   ------------------------- */
function doPost(e) {
  try {
    if (!e || !e.postData || !e.postData.contents) {
      return jsonOut({ status: 'error', error: 'missing_payload' });
    }

    var props = PropertiesService.getScriptProperties();
    var SPREADSHEET_ID = props.getProperty('SPREADSHEET_ID');
    var SHEET_NAME = props.getProperty('SHEET_NAME') || 'Submissions';
    var ALLOWED_ORIGINS_RAW = props.getProperty('ALLOWED_ORIGINS') || '';

    if (!SPREADSHEET_ID) {
      return jsonOut({ status: 'error', error: 'server_misconfigured_no_spreadsheet' });
    }

    // Parse payload
    var payload;
    try {
      payload = JSON.parse(e.postData.contents);
    } catch (err) {
      return jsonOut({ status: 'error', error: 'invalid_json' });
    }

    // Origin check (best-effort - client must send payload._origin)
    var allowedOrigins = ALLOWED_ORIGINS_RAW.split(',').map(function(s){ return s.trim(); }).filter(Boolean);
    var allowAll = allowedOrigins.length === 0 || allowedOrigins.indexOf('*') !== -1;
    if (!allowAll && payload._origin && allowedOrigins.indexOf(payload._origin) === -1) {
      return jsonOut({ status: 'error', error: 'origin_not_allowed' });
    }

    // Basic validation
    if (!payload.email || !isEmail(payload.email)) {
      return jsonOut({ status: 'error', error: 'invalid_email' });
    }
    if (!payload.consent_privacy) {
      return jsonOut({ status: 'error', error: 'consent_privacy_required' });
    }

    // Build identifiers
    var submissionId = Utilities.getUuid();
    var timestamp = new Date().toISOString();

    // Open sheet & headers
    var ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    var sheet = ss.getSheetByName(SHEET_NAME);
    if (!sheet) {
      return jsonOut({ status: 'error', error: 'sheet_not_found', sheet: SHEET_NAME });
    }
    var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

    // Create data map
    var dataMap = Object.assign({}, payload);
    dataMap.timestamp = timestamp;
    dataMap.submission_id = submissionId;
    if (dataMap.consent_privacy === true) dataMap.consent_privacy = 'TRUE';
    if (dataMap.consent_marketing === true) dataMap.consent_marketing = 'TRUE';

    // Build row according to headers order
    var row = headers.map(function(h) {
      var val = dataMap.hasOwnProperty(h) ? dataMap[h] : '';
      return sanitizeCell(flattenValue(val));
    });

    // Append row with lock
    var lock = LockService.getScriptLock();
    lock.waitLock(5000);
    try {
      sheet.appendRow(row);
    } finally {
      try { lock.releaseLock(); } catch (er) {}
    }

    // Send emails and update statuses
    try {
      sendEmails(dataMap, submissionId, headers, sheet);
    } catch (err) {
      Logger.log('sendEmails threw: ' + String(err));
    }

    return jsonOut({ status: 'ok', submission_id: submissionId });

  } catch (err) {
    Logger.log('doPost error: ' + String(err));
    return jsonOut({ status: 'error', error: 'server_error', detail: String(err) });
  }
}

/* -------------------------
   EMAIL HANDLER (defensive)
   ------------------------- */
function sendEmails(dataMap, submissionId, headers, sheet) {
  var props = PropertiesService.getScriptProperties();
  var SPREADSHEET_ID = props.getProperty('SPREADSHEET_ID');
  var SHEET_NAME = props.getProperty('SHEET_NAME') || 'Submissions';
  var ownerEmail = props.getProperty('OWNER_EMAIL');
  var userSubject = props.getProperty('USER_SUBJECT') || 'Thank you';
  var ownerSubject = props.getProperty('OWNER_SUBJECT') || 'New lead';

  // Defensive: ensure dataMap present
  if (!dataMap || typeof dataMap !== 'object') {
    Logger.log('sendEmails: missing or invalid dataMap — aborting email send.');
    return;
  }

  // Ensure sheet is available
  if (!sheet) {
    try {
      var ss = SpreadsheetApp.openById(SPREADSHEET_ID);
      sheet = ss.getSheetByName(SHEET_NAME);
    } catch (err) {
      Logger.log('sendEmails: cannot open sheet: ' + String(err));
      sheet = null;
    }
  }

  // Ensure headers are available
  if (!headers && sheet) {
    try {
      headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
    } catch (err) {
      Logger.log('sendEmails: cannot read headers: ' + String(err));
      headers = null;
    }
  }

  var lastRow = sheet ? sheet.getLastRow() : null;

  var userEmail = String(dataMap.email || '').trim();
  var userName = dataMap.name || 'Participant';

  // User email content (HTML with inline CSS)
  var userBodyHtml =
    '<div style="font-family: Arial, sans-serif; font-size: 15px; line-height: 1.6; color: #222; max-width: 600px; margin: auto; padding: 20px;">' +

    '<p style="font-size:16px;">Hi ' + userName + ',</p>' +

    '<p>Thanks for completing our <strong>Cybersecurity Self-Assessment Quiz</strong> – that already puts you ahead of 80% of businesses who don’t take that first step. We hope our cybersecurity self-assessment quiz gave you valuable insights into your organization\'s security posture.</p>' +

    '<p><strong>But here\'s the truth:</strong> knowing your risks isn’t enough — acting on them is where the transformation happens.</p>' +

    '<p>Cyber threats in India are on the rise, especially targeting <strong>Small and Medium Enterprises (SMEs)</strong>. Without the right controls, a single breach could cost more than your entire year’s revenue.</p>' +

	'<h3 style="font-size:18px; margin-top:25px; margin-bottom:10px; color:#111;">✓ What Successful SMEs Do Next:</h3>' +
    '<ul style="padding-left:20px; margin-top:10px; margin-bottom:20px;">' +
      '<li style="margin-bottom:10px;"><strong>Let\'s Discuss:</strong> Book a 1:1 strategy call with our experts — no strings attached. We\'ll walk you through how to align security with your business goals.</li>' +
      '<li style="margin-bottom:10px;"><strong>Explore Our Services:</strong> Check our pricing to see how surprisingly affordable cybersecurity can be.<br>' +
      '<span style="color:#444;">- Our goal is to provide a secure structure for Indian SMEs that further fuels their growth.<br>' +
      '- We are offering you a <strong>10% discount</strong> on our comprehensive cybersecurity audit services for the next 48 hours. Don\'t miss out on this opportunity to secure your business!</span></li>' +
      '<li style="margin-bottom:10px;"><strong>Dive Deeper:</strong> Explore our knowledge repository to deepen your understanding of core cybersecurity concepts.</li>' +
      '<li><strong>Share Your Thoughts:</strong> Reply with feedback or questions — we read and respond to every message.</li>' +
    '</ul>' +

	'<h3 style="font-size:18px; margin-top:25px; margin-bottom:10px; color:#111;">✓ Why Act Now?</h3>' +
    '<ul style="padding-left:20px; margin-top:10px; margin-bottom:20px;">' +
      '<li>Trusted by Indian SMBs just like yours</li>' +
      '<li>80% of our clients reduced threats within 90 days</li>' +
      '<li>Limited onboarding slots this month – book yours before they fill up</li>' +
      '<li>Tailored, non-generic solutions based on your quiz results</li>' +
    '</ul>' +

	'<p style="font-size:16px; font-weight:bold; margin-top:25px;">[Action Step] Take the Next Step — Your Business Deserves It. Let\'s get started!</p>' +

	'<p><strong>[We’re Here to Help]</strong><br>' +
	'Still unsure? That’s completely fine. We’re a people-first company that believes cybersecurity shouldn’t be confusing, costly, or one-size-fits-all.<br>' +
	'Let’s talk about securing your growth — on your terms.</p>' +

	'<p style="margin-top:30px;">Regards,<br>' +
	'Cybersecurity Team<br>' +
	'[Company Name]<br>' +
	'[Email] | [Website]</p>'

    '</div>';

	

  // Owner email content
  var ownerBody =
    'New Cybersecurity Self-Assessment submission received.\n\n' +
    'Submission ID: ' + submissionId + '\n' +
    'Name: ' + (dataMap.name || '') + '\n' +
    'Email: ' + (dataMap.email || '') + '\n' +
    'Phone: ' + (dataMap.phone || '') + '\n' +
    'Company: ' + (dataMap.company || '') + '\n' +
    'Role: ' + (dataMap.role || '') + '\n' +
    'Country: ' + (dataMap.country || '') + '\n\n' +
    'Full answers are recorded in the Submissions sheet.';

  // Send user email with sender name (HTML)
  if (userEmail && isEmail(userEmail)) {
    var userStatus = 'failed';
    try {
      GmailApp.sendEmail(userEmail, userSubject, '', {
        name: 'VnV Cybersecurity Team',
        htmlBody: userBodyHtml
      });
      userStatus = 'sent';
    } catch (err) {
      Logger.log('sendEmails: failed to send user email: ' + String(err));
      userStatus = 'failed';
    }

    if (sheet && lastRow && headers) {
      var userColIdx = headers.indexOf('email_user_status');
      if (userColIdx !== -1) {
        try {
          sheet.getRange(lastRow, userColIdx + 1).setValue(userStatus);
        } catch (err) {
          Logger.log('sendEmails: failed to update email_user_status: ' + String(err));
        }
      }
    }
  } else {
    Logger.log('sendEmails: no valid user email provided: "' + userEmail + '"');
  }

  // Send owner email (with status update)
  if (ownerEmail) {
    var ownerStatus = 'failed';
    try {
      GmailApp.sendEmail(ownerEmail, ownerSubject, ownerBody);
      ownerStatus = 'sent';
    } catch (err) {
      Logger.log('sendEmails: failed to send owner email: ' + String(err));
      ownerStatus = 'failed';
    }

    if (sheet && lastRow && headers) {
      var ownerColIdx = headers.indexOf('email_owner_status');
      if (ownerColIdx !== -1) {
        try {
          sheet.getRange(lastRow, ownerColIdx + 1).setValue(ownerStatus);
        } catch (err) {
          Logger.log('sendEmails: failed to update email_owner_status: ' + String(err));
        }
      }
    }
  } else {
    Logger.log('sendEmails: OWNER_EMAIL not configured; skipping owner notification.');
  }
}

/* -------------------------
   HELPERS
   ------------------------- */
function isEmail(s) {
  return typeof s === 'string' && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(s);
}

function flattenValue(v) {
  if (v === null || v === undefined) return '';
  if (Array.isArray(v)) return v.join(' | ');
  if (typeof v === 'object') {
    try { return JSON.stringify(v); } catch (e) { return String(v); }
  }
  return String(v);
}

function sanitizeCell(s) {
  s = String(s);
  if (s === '') return '';
  // Put hyphen last so it is literal in the character class (avoid range bug)
  if (/^[=+@-]/.test(s)) return "'" + s; // prevent spreadsheet formula injection
  s = s.replace(/\r\n/g, ' ').replace(/\n/g, ' ').trim();
  if (s.length > 20000) s = s.substring(0, 20000);
  return s;
}

function jsonOut(obj) {
  return ContentService.createTextOutput(JSON.stringify(obj))
    .setMimeType(ContentService.MimeType.JSON);
}

/* -------------------------
   TEST HELPERS (editor-only)
   ------------------------- */
/**
 * testDoPost()
 * Run from the Apps Script editor to test the full flow without an HTTP request.
 * It simulates a POST payload (adjust the sample payload as needed).
 */
function testDoPost() {
  var sample = {
    name: 'Test User',
    email: 'ansar@vnv.ca',
    phone: '9999999999',
    company: 'Acme Inc',
    role: 'CTO',
    country: 'India',
    consent_privacy: true,
    consent_marketing: false,
    form_version: 'v1',
    source_page: 'http://localhost/test',
    utm_source: 'test',
    Q1: 'Yes',
    notes_internal: 'test-run'
  };
  var e = { postData: { contents: JSON.stringify(sample) } };
  var out = doPost(e);
  Logger.log('doPost returned: ' + (out && out.getContent ? out.getContent() : JSON.stringify(out)));
}
